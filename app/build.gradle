apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

apply from: '../versioning.gradle'
apply from: '../ktlint.gradle'

def keystorePropertiesFile = rootProject.file("../jks/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    println(keystoreProperties["storeFile"])
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode gitVersionCode
        versionName gitVersionName
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias keystoreProperties['dKeyAlias']
            keyPassword keystoreProperties['dKeyPassword']
            storeFile file(keystoreProperties['dStoreFile'])
            storePassword keystoreProperties['dStorePassword']
        }

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "version"
    productFlavors {
        dev {
            dimension "version"
            versionCode gitVersionCodeTime
            versionName gitVersionName
            applicationId config.applicationId + ".dev"
            signingConfig signingConfigs.debug
        }

        pro {
            dimension "version"
            versionCode gitVersionCode
            versionName gitVersionName
            applicationId config.applicationId
            signingConfig signingConfigs.release
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            resValue("string", "ads_app_id", "ca-app-pub-3940256099942544~3347511713")
            resValue("string", "ads_banner_unit_id", "ca-app-pub-3940256099942544/6300978111")
            resValue("string", "ads_interstitial_unit_id", "ca-app-pub-3940256099942544/1033173712")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            resValue("string", "ads_app_id", "ca-app-pub-3940256099942544~3347511713")
            resValue("string", "ads_banner_unit_id", "ca-app-pub-3940256099942544/6300978111")
            resValue("string", "ads_interstitial_unit_id", "ca-app-pub-3940256099942544/1033173712")
        }
    }

    dataBinding {
        enabled true
    }

    viewBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude "META-INF/kotlinx-io.kotlin_module"
        exclude "META-INF/atomicfu.kotlin_module"
        exclude "META-INF/kotlinx-coroutines-io.kotlin_module"
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.anko.values()
    implementation deps.coroutines.values()
    implementation deps.kotlin.values()
    implementation deps.androidx.values()
    implementation deps.androidx_ktx.values()
    implementation deps.retrofit.values()
    implementation deps.rx.values()
    implementation deps.glide.runtime
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt deps.glide.compiler
    implementation deps.autodispose.values()
    implementation deps.koin.values()
    implementation deps.timber
    implementation deps.youtube_player
    implementation deps.koap
    implementation deps.lottie
    implementation deps.firebase.values()
    implementation deps.jsoup
    testImplementation deps.tsl.values()
    androidTestImplementation deps.atsl.values()
}
